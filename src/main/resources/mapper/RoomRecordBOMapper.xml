<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szq.hotel.dao.RoomRecordDAO" >
  <resultMap id="BaseResultMap" type="com.szq.hotel.entity.bo.RoomRecordBO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="virgin_state" property="virginState" jdbcType="VARCHAR" />
    <result column="new_state" property="newState" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, room_id, virgin_state, new_state, remark, create_user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hm_room_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hm_room_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szq.hotel.entity.bo.RoomRecordBO" >
    insert into hm_room_record (id, room_id, virgin_state, 
      new_state, remark, create_user_id, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{virginState,jdbcType=VARCHAR}, 
      #{newState,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.szq.hotel.entity.bo.RoomRecordBO" >
    insert into hm_room_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="virginState != null" >
        virgin_state,
      </if>
      <if test="newState != null" >
        new_state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="virginState != null" >
        #{virginState,jdbcType=VARCHAR},
      </if>
      <if test="newState != null" >
        #{newState,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szq.hotel.entity.bo.RoomRecordBO" >
    update hm_room_record
    <set >
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="virginState != null" >
        virgin_state = #{virginState,jdbcType=VARCHAR},
      </if>
      <if test="newState != null" >
        new_state = #{newState,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.szq.hotel.entity.bo.RoomRecordBO" >
    update hm_room_record
    set room_id = #{roomId,jdbcType=INTEGER},
      virgin_state = #{virginState,jdbcType=VARCHAR},
      new_state = #{newState,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--分页查询房间操作记录-->
  <select id="selectRoomRecord" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select room.*,ad.name
    from hm_room_record room LEFT JOIN hm_admin `ad`
    ON room.create_user_id = ad.id
    where room_id = #{id,jdbcType=INTEGER} ORDER BY create_time DESC
    <include refid="limit" />
  </select>
  <!--查询房间记录数量-->
  <select id="selectRoomRecordCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select COUNT(id)
    from hm_room_record
    where room_id = #{id,jdbcType=INTEGER}
  </select>

  <sql id="limit">
    limit #{pageOffset},#{pageSize}
  </sql>


<insert id="insertRoomState" parameterType="java.util.Map">
    INSERT INTO hotel.hm_room_record (

    room_id,
    virgin_state,
    new_state,
    remark,
    create_user_id,
    create_time
  )
  VALUES
    (
      #{roomId},
      #{virginState},
      #{newState},
      #{remark},
      #{createUserId},
      #{createTime}
    ) ;
</insert>

</mapper>